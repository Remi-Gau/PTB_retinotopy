function PrintJSONfile(cfg)
    % saves a BIDS compatible data dictionary for the events.tsv files

    if isempty(which('jsonwrite'))

        warning('JSONio package required for writing json data dictionnary: https://github.com/gllmflndn/JSONio.\n See output folder for copies of the JSON files.');

    else

        opts.indent = '    ';

        filename = [cfg.OutputFilename '_events.json'];

        switch cfg.Apperture

            case 'Bar'
                Header = struct( ...
                    'onset', struct( ...
                        'LongName', 'stimulus onset', ...
                        'Description', 'Time of the event measured from the beginning of the acquisition of the first volume in the corresponding task imaging data file.', ...
                        'Levels', 'NA', ...
                        'Units', 'seconds'), ...
                    'duration', struct( ...
                        'LongName', 'Duration of the event', ...
                        'Description', 'Duration of the event (measured from onset).', ...
                        'Levels', 'NA', ...
                        'Units', 'seconds'), ...
                    'bar_angle', struct( ...
                        'LongName', 'bar angle', ...
                        'Description', 'bar angle', ...
                        'Levels', '', ...
                        'Units', 'degrees'), ...
                    'bar_width', struct( ...
                        'LongName', 'width of the bar', ...
                        'Description', '', ...
                        'Levels', 'NA', ...
                        'Units', 'degrees of visual angles'), ...
                    'x_target_pos', struct( ...
                        'LongName', 'x position of the the target', ...
                        'Description', '', ...
                        'Levels', 'NA', ...
                        'Units', 'degrees of visual angles'), ...
                    'y_target_pos', struct( ...
                        'LongName', 'y position of the the target', ...
                        'Description', '', ...
                        'Levels', 'NA', ...
                        'Units', 'degrees of visual angles'), ...
                    'target_width', struct( ...
                        'LongName', 'diameter of the the target', ...
                        'Description', '', ...
                        'Levels', 'NA', ...
                        'Units', 'degrees of visual angles'), ...
                    'bar_position', struct( ...
                        'LongName', 'bar position', ...
                        'Description', 'bar position with respoect to the fixation cross', ...
                        'Levels', 'NA', ...
                        'Units', 'degrees of visual angles'), ...
                     'stim_file', struct( ...
                        'LongName', 'stimulus file', ...
                        'Description', 'tif file representing the aperture', ...
                        'Levels', 'NA', ...
                        'Units', 'NA'));

        end

        jsonwrite(filename, Header, opts);

    end

end
